import Head from 'next/head'
import { Contract, providers, utils} from "ethers";
import React,{useState, useEffect, useRef } from 'react';
import Web3Modal from "web3modal";
import { NFT_CONTRACT_ADDRESS, NFT_CONTRACT_ABI} from "../constants/constants";

import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const[walletConnected, setWalletConnected] = useState(false);
  const[loading, setLoading] = useState(false);
  //Keep track the number of tokenIds that have been minted.
  const[tokenIdsMinted, setTokenIdsMinted] = useState("0");
  const web3ModalRef = useRef();

  const publicMint = async() => {
try {
  //We need a signer since this is a used for write transaction.
  const signer = await getProviderOrSigner(true);
  const nftContract = new Contract(NFT_CONTRACT_ADDRESS, NFT_CONTRACT_ABI, signer);
  const tx = await nftContract.mint({
    value : utils.parseEther("0.01")
  });
  setLoading(true);
  await tx.wait();
  setLoading(false);
  window.alert("You successfully minted Lw3Punks!");
} catch (error) {
  console.log(error,"Error");
}
  }
//get the number of tokenIds that have been minted. 
  const getTokenIdsMinted = async() => {
   try {
    //No need of signer here as we are reading the state from the Blockchain.
    const provider = await getProviderOrSigner();
    const nftContract = new Contract(NFT_CONTRACT_ADDRESS, NFT_CONTRACT_ABI, provider);
    const _tokenIds = await nftContract.tokenIds();
    console.log(_tokenIds, "_tokenIds");
    //TokenIds are the BigNumber so we need to convert it to the String.
    setTokenIdsMinted(_tokenIds.toString());
   } catch (error) {
    console.log(error,"Error from getTokenIdsMinted" );
   }
  }
  const getProviderOrSigner = async(needSigner = false) => {
  const provider = await web3ModalRef.current.connect();
  const web3Provider = new providers.Web3Provider(provider);
  const { chainId } = await web3Provider.getNetwork();
   if(chainId != 80001){
   window.alert("Change the network to Mumbai");
   throw new Error("Change the network to Mumbai");
   }
   if(needSigner){
    const signer  = await web3Provider.getSigner();
    return signer;
   }
   return web3Provider;
  }
  const connectWallet = async() => {
   try {
    await getProviderOrSigner();
    setWalletConnected(true);
   } catch (error) {
    console.log(error,"Error");
   }
  }
  useEffect(() => {
    if(!walletConnected){
      web3ModalRef.current = new Web3Modal({
       network : "mumbai",
       providerOptions : {},
       disableInjectedProvider : false,
      });
      connectWallet();
      getTokenIdsMinted();
      setInterval(async function(){
       await getTokenIdsMinted()
      }, 5 * 1000);
    }
  },[walletConnected]);
  const renderButton = async() => {
  
    return(
      <button onClick = {publicMint} style={styles.button}>Public Mint</button>
    )
  }
  return (
    <div>
    
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.main}>
       <div>
        <h1 className={styles.title}>Welcome to the LW3Punks!</h1>
        <div className={styles.description}>
        It&#39;s an NFT collection for LearnWeb3 students.
        </div>
        <div className={styles.description}>
          {tokenIdsMinted}/10 tokens have been minted.
        </div>
        {/* {renderButton()} */}
      {!walletConnected ? 
      <button onClick={connectWallet} className={styles.button}>Connect wallet</button>
     :       <button className={styles.button}>Connected</button>

  }
  {loading ? 
    <button className = {styles.button}>Loading..</button>
:   <button onClick = {() => publicMint()} className={styles.button}>Public Mint</button>

  }


       </div>
       <div className={styles.image}>
<img src = "./LW3punks/1.png" height="50%" width="70%"/>
       </div>
       </div>
       <footer className={styles.footer}>Made with &#10084; by LW3Punks</footer>
    </div>
  )
}
